// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Data;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200312234415_seededProfiles")]
    partial class seededProfiles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            Subject = "Math"
                        },
                        new
                        {
                            ClassId = 2,
                            Subject = "Science"
                        },
                        new
                        {
                            ClassId = 3,
                            Subject = "History"
                        });
                });

            modelBuilder.Entity("Repository.Models.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Parents");

                    b.HasData(
                        new
                        {
                            ParentId = 1,
                            Name = "Kelly Madison",
                            StudentId = 1
                        },
                        new
                        {
                            ParentId = 2,
                            Name = "Kim Clennan",
                            StudentId = 2
                        },
                        new
                        {
                            ParentId = 3,
                            Name = "Steve Melton",
                            StudentId = 3
                        },
                        new
                        {
                            ParentId = 4,
                            Name = "Bill Johnson",
                            StudentId = 4
                        },
                        new
                        {
                            ParentId = 5,
                            Name = "Jeff Sather",
                            StudentId = 5
                        },
                        new
                        {
                            ParentId = 6,
                            Name = "Amy Sanchez",
                            StudentId = 6
                        },
                        new
                        {
                            ParentId = 7,
                            Name = "Samuel Martinez",
                            StudentId = 7
                        },
                        new
                        {
                            ParentId = 8,
                            Name = "Frank Madison",
                            StudentId = 8
                        },
                        new
                        {
                            ParentId = 9,
                            Name = "Max Collins",
                            StudentId = 9
                        },
                        new
                        {
                            ParentId = 10,
                            Name = "Bob Vogg",
                            StudentId = 10
                        });
                });

            modelBuilder.Entity("Repository.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FavoriteSubject")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("LearningStyle")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            ProfileId = 1
                        },
                        new
                        {
                            ProfileId = 2
                        },
                        new
                        {
                            ProfileId = 3
                        },
                        new
                        {
                            ProfileId = 4
                        },
                        new
                        {
                            ProfileId = 5
                        },
                        new
                        {
                            ProfileId = 6
                        },
                        new
                        {
                            ProfileId = 7
                        },
                        new
                        {
                            ProfileId = 8
                        },
                        new
                        {
                            ProfileId = 9
                        },
                        new
                        {
                            ProfileId = 10
                        });
                });

            modelBuilder.Entity("Repository.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Name = "Aaron Madison",
                            ProfileId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            Name = "Sean Clennan",
                            ProfileId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            Name = "Zac Melton",
                            ProfileId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            Name = "Marcus Johnson",
                            ProfileId = 4
                        },
                        new
                        {
                            StudentId = 5,
                            Name = "Charlie Sather",
                            ProfileId = 5
                        },
                        new
                        {
                            StudentId = 6,
                            Name = "Abraham Sanchez",
                            ProfileId = 6
                        },
                        new
                        {
                            StudentId = 7,
                            Name = "Jacob Martinez",
                            ProfileId = 7
                        },
                        new
                        {
                            StudentId = 8,
                            Name = "Billy Madison",
                            ProfileId = 8
                        },
                        new
                        {
                            StudentId = 9,
                            Name = "Phil Collins",
                            ProfileId = 9
                        },
                        new
                        {
                            StudentId = 10,
                            Name = "Parker Vogg",
                            ProfileId = 10
                        });
                });

            modelBuilder.Entity("Repository.Models.StudentClassGrade", b =>
                {
                    b.Property<int>("StudentClassGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentClassGradeId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentClassGrades");

                    b.HasData(
                        new
                        {
                            StudentClassGradeId = 1,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 1
                        },
                        new
                        {
                            StudentClassGradeId = 4,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 2
                        },
                        new
                        {
                            StudentClassGradeId = 7,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 3
                        },
                        new
                        {
                            StudentClassGradeId = 10,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 4
                        },
                        new
                        {
                            StudentClassGradeId = 13,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 5
                        },
                        new
                        {
                            StudentClassGradeId = 16,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 6
                        },
                        new
                        {
                            StudentClassGradeId = 19,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 7
                        },
                        new
                        {
                            StudentClassGradeId = 22,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 8
                        },
                        new
                        {
                            StudentClassGradeId = 25,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 9
                        },
                        new
                        {
                            StudentClassGradeId = 28,
                            ClassId = 1,
                            Grade = 100,
                            StudentId = 10
                        },
                        new
                        {
                            StudentClassGradeId = 2,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 1
                        },
                        new
                        {
                            StudentClassGradeId = 5,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 2
                        },
                        new
                        {
                            StudentClassGradeId = 8,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 3
                        },
                        new
                        {
                            StudentClassGradeId = 11,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 4
                        },
                        new
                        {
                            StudentClassGradeId = 14,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 5
                        },
                        new
                        {
                            StudentClassGradeId = 17,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 6
                        },
                        new
                        {
                            StudentClassGradeId = 20,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 7
                        },
                        new
                        {
                            StudentClassGradeId = 23,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 8
                        },
                        new
                        {
                            StudentClassGradeId = 26,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 9
                        },
                        new
                        {
                            StudentClassGradeId = 29,
                            ClassId = 2,
                            Grade = 100,
                            StudentId = 10
                        },
                        new
                        {
                            StudentClassGradeId = 3,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 1
                        },
                        new
                        {
                            StudentClassGradeId = 6,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 2
                        },
                        new
                        {
                            StudentClassGradeId = 9,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 3
                        },
                        new
                        {
                            StudentClassGradeId = 12,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 4
                        },
                        new
                        {
                            StudentClassGradeId = 15,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 5
                        },
                        new
                        {
                            StudentClassGradeId = 18,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 6
                        },
                        new
                        {
                            StudentClassGradeId = 21,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 7
                        },
                        new
                        {
                            StudentClassGradeId = 24,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 8
                        },
                        new
                        {
                            StudentClassGradeId = 27,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 9
                        },
                        new
                        {
                            StudentClassGradeId = 30,
                            ClassId = 3,
                            Grade = 100,
                            StudentId = 10
                        });
                });

            modelBuilder.Entity("Repository.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.HasIndex("ClassId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            ClassId = 1,
                            Name = "Mike Terrill",
                            PhoneNumber = "111-111-1111",
                            Subject = "Math"
                        },
                        new
                        {
                            TeacherId = 2,
                            ClassId = 2,
                            Name = "Nevin Seibel",
                            PhoneNumber = "222-222-2222",
                            Subject = "Science"
                        },
                        new
                        {
                            TeacherId = 3,
                            ClassId = 3,
                            Name = "David Lagrange",
                            PhoneNumber = "555-555-5555",
                            Subject = "History"
                        });
                });

            modelBuilder.Entity("Repository.Models.Parent", b =>
                {
                    b.HasOne("Repository.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Repository.Models.Student", b =>
                {
                    b.HasOne("Repository.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("Repository.Models.StudentClassGrade", b =>
                {
                    b.HasOne("Repository.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Repository.Models.Teacher", b =>
                {
                    b.HasOne("Repository.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
